name: Lighthouse
on:
  pull_request:
    branches:
      - main 
  workflow_dispatch:
jobs:
  static-dist-dir:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up node 
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install

      - name: Build site
        run: npm run build

      - name: Run Lighthouse against a static dist dir
        uses: treosh/lighthouse-ci-action@v9
        with:
          # no urls needed, since it uses local folder to scan .html files
          configPath: './lighthouserc.json'
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage

      - shell: bash
        run: |
          manifest.jsonPath > lighthouse-json.txt

      - name: Upload math result for job 1
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-json
          path: lighthouse-json.txt

  # print-results:
  #     - name: Download lighthouse artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: lighthouse-results

  #     - shell: bash
  #       run: |
  #         value=`cat lhr-*.json`

  #     - name: Create Pull Request comment
  #       uses: actions/github-script@v6
  #       with:
  #         github-token: ${{ secrets.GH_ACCESS_TOKEN }}
  #         script: |
  #           github.rest.issues.createComment({
  #             issue_number: context.issue.number,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: 'ðŸ‘‹ Thanks for reporting!'
  #           })